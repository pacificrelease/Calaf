name: Build Solution

on:
  push:
    branches:
      - main
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - main
  
jobs:
  build-test-pack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Version Sweeper
        id: dotnet-version-sweeper
        uses: dotnet/versionsweeper@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: ${{ github.repository_owner }}
          name: ${{ github.repository }}
          branch: ${{ github.ref }}
        
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x
          
      - name: Restore
        run: dotnet restore ${{ vars.SOLUTION }}
      
      - name: Build
        run: dotnet build ${{ vars.SOLUTION }} --no-restore --configuration ${{ vars.CONFIGURATION }}
        
      - name: Test
        run: dotnet test ${{ vars.SOLUTION }} --no-build --configuration ${{ vars.CONFIGURATION }} --verbosity normal --collect:"XPlat Code Coverage" -- RunConfiguration.FailFast=true
        
      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
        
      - name: Convert Coverage to Cobertura
        run: reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage-report -reporttypes:Cobertura

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-report
          path: coverage-report
          
      - name: Upload Coverage to Codecov
        if: false
        uses: codecov/codecov-action@v3
        with:
          files: coverage-report/Cobertura.xml
          fail_ci_if_error: true
          verbose: true