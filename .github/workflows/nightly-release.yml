name: Nightly Release

on:
    workflow_dispatch:
      
    schedule:
        - cron: '5 0 * * *'
          
permissions:
    contents: write
    packages: write
          
concurrency:
    group: nightly
    cancel-in-progress: true
    
env:
    DOTNET_VERSION: '9.0.x'
    FEED: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

jobs:    
    nightly-release:
        name: Nightly Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
  
            - name: Setup
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}
              
            - name: Configure
              run: |
                git config --global user.name "${{ vars.GIT_USERNAME }}"
                git config --global user.email "${{ vars.GIT_EMAIL }}"

            - name: Feed
              run: |
                dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
                  --username "${{ github.actor }}" \
                  --password "${{ secrets.GITHUB_TOKEN }}" \
                  --store-password-in-clear-text \
                  --name github
  
            - name: Tool
              run: |
                if dotnet tool list -g | grep -q calaf; then
                  dotnet tool update -g --source github calaf
                else
                  dotnet tool install -g --source github calaf
                fi
              continue-on-error: true

            - name: Version
              id: version
              run: |
                calaf make nightly
                echo "VERSION_CHANGED=$(git diff --quiet HEAD || echo 'true')" >> $GITHUB_OUTPUT
              continue-on-error: false
            
            - name: Push
              if: steps.version.outputs.VERSION_CHANGED == 'true'
              run: |
                git push
                git push --tags
              continue-on-error: false
            
            - name: Restore
              run: dotnet restore ${{ vars.SOLUTION }}
  
            - name: Build
              run: dotnet build ${{ vars.SOLUTION }} --no-restore --configuration ${{ vars.CONFIGURATION }}
  
            - name: Pack
              run: |
                dotnet pack ${{ vars.SOLUTION }} --no-build --configuration ${{ vars.CONFIGURATION }} --output ./nupkgs
                
            - name: Publish
              run: |
                dotnet nuget push ./nupkgs/*.nupkg \
                  --source github \
                  --api-key "${{ secrets.GITHUB_TOKEN }}" \
                  --skip-duplicate
              continue-on-error: true