name: GitHub Nightly Release

on:
    workflow_dispatch:
    schedule:
        - cron: "5 0 * * *"
          
permissions:
    contents: write
    packages: write
          
concurrency:
    group: nightly
    cancel-in-progress: true
    
env:
    DOTNET_VERSION: '9.0.x'
    GITHUB_FEED: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

jobs:    
    nightly-release:
        name: Nightly Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
  
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}
              
            - name: Configure Git
              run: |
                git config --global user.name "${{ vars.GIT_USERNAME }}"
                git config --global user.email "${{ vars.GIT_EMAIL }}"
                
            - name: Add a GitHub NuGet Feed Source
              run: |
                dotnet nuget add source "${{ env.GITHUB_FEED }}" --name "github" --username "${{ github.actor }}" --password "${{ secrets.GITHUB_TOKEN }}" --store-password-in-clear-text

            - name: Install Calaf Tool
              run: |
                dotnet tool install --global Calaf --add-source "github" --prerelease
                
            - name: Generate a Nightly Version
              id: version
              run: |
                BEFORE_COMMIT=$(git rev-parse HEAD)
                
                calaf make nightly
                
                AFTER_COMMIT=$(git rev-parse HEAD)
                
                if ! git diff --quiet || ! git diff --cached --quiet || [ "$BEFORE_COMMIT" != "$AFTER_COMMIT" ];
                then
                  echo "VERSION_CHANGED=true" >> $GITHUB_OUTPUT
                  echo "Changes detected"
                else
                  echo "VERSION_CHANGED=false" >> $GITHUB_OUTPUT
                  echo "No changes detected"
                fi
              continue-on-error: false
            
            - name: Restore Dependencies
              run: dotnet restore ${{ vars.SOLUTION }}
  
            - name: Build Solution
              run: dotnet build ${{ vars.SOLUTION }} --no-restore --configuration ${{ vars.CONFIGURATION }}

            - name: Run Tests
              run: dotnet test ${{ vars.SOLUTION }} --no-build --configuration ${{ vars.CONFIGURATION }} --verbosity normal

            - name: Pack NuGet Package
              run: |
                dotnet pack ${{ vars.SOLUTION }} --no-build --configuration ${{ vars.CONFIGURATION }} --output ./nupkgs
                
            - name: Publish to the GitHub NuGet Feed
              run: |
                dotnet nuget push ./nupkgs/*.nupkg \
                  --source github \
                  --api-key "${{ secrets.GITHUB_TOKEN }}" \
                  --skip-duplicate